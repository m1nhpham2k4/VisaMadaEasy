"""Rename description to task_title and notes to description in ChecklistItem

Revision ID: 96b00ea747ad
Revises: 0c475faf872e
Create Date: 2025-06-07 23:46:51.435975

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session


# revision identifiers, used by Alembic.
revision = '96b00ea747ad'
down_revision = '0c475faf872e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, create the new columns as nullable
    with op.batch_alter_table('checklist_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('task_title', sa.Text(), nullable=True))
    
    # Copy data from description to task_title
    connection = op.get_bind()
    connection.execute(sa.text(
        "UPDATE checklist_item SET task_title = description"
    ))
    
    # Modify the existing columns and set NOT NULL constraints
    with op.batch_alter_table('checklist_item', schema=None) as batch_op:
        # Copy notes to description (if notes is not null)
        connection.execute(sa.text(
            "UPDATE checklist_item SET description = notes WHERE notes IS NOT NULL"
        ))
        
        # Now that we've migrated the data, make task_title not nullable
        batch_op.alter_column('task_title',
               existing_type=sa.TEXT(),
               nullable=False)
        
        # Drop the original notes column as it's no longer needed
        batch_op.drop_column('notes')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('checklist_item', schema=None) as batch_op:
        # Add back the notes column
        batch_op.add_column(sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
    
        # Copy description to notes
        connection = op.get_bind()
        connection.execute(sa.text(
            "UPDATE checklist_item SET notes = description WHERE description IS NOT NULL"
        ))
        
        # Make description column not nullable again
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=False)
               
        # Copy task_title back to description
        connection.execute(sa.text(
            "UPDATE checklist_item SET description = task_title"
        ))
        
        # Drop the task_title column
        batch_op.drop_column('task_title')

    # ### end Alembic commands ###
